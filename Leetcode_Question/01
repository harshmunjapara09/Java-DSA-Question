class Solution {
    public int[] twoSum(int[] nums, int target) {
        for (int i = 0; i < nums.length; i++) {
            for (int j = i + 1; j < nums.length; j++) {
                if (target == nums[j] + nums[i]) {
                    return new int[] { i, j };
                }
            }
        }
        return null;
    }
}

// Secound Way

class Solution {
    public int[] twoSum(int[] nums, int target) {
        HashMap<Integer,Integer> map = new HashMap<>();

        for(int i=0;i<nums.length;i++){
           map.put(nums[i],i);
        }
        for(int i=0;i<nums.length;i++){
            if(map.containsKey(target - nums[i]) && map.get(target - nums[i])!=i){
                return new int[] {i,map.get(target - nums[i])};
            }
        }
       return null;
    }
}