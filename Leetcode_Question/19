/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        int len = length(head);
        if (n==len){
            head =head.next;
            return head;
        }

        ListNode prev = head;
        ListNode curr = head;
        int nth = len-n+1;
        int i=1;
        while (i!=nth && curr.next!=null){
            prev=curr;
            curr=curr.next;
            i++;
        }
        prev.next= curr.next;
        return head;
    }

    private int length(ListNode head) {
        int c = 0;
        ListNode temp = head;
        while (temp != null) {
            c++;
            temp = temp.next;
        }
        return c;
    }
}